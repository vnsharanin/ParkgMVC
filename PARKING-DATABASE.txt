drop database ParkgMVC;
CREATE DATABASE ParkgMVC;
use ParkgMVC;

CREATE TABLE USR
(
	Login char(255) not null,
	FIO char(255) null,
	Num_Card_Driver int(11) null,
	Now_Balance decimal(65,30) null default 0.00,
	PRIMARY KEY(Login)
);

insert into USR(Login, Now_Balance)
values ('v_sh95', 0);

CREATE TABLE Balance
(
	operation_id int(11) unsigned not null auto_increment,
	Type_Operation char(255) not null,
	Sum decimal(65,30) not null default 0.00,
	BalanceAfterOperation decimal(65,30) not null default 0.00,
	Login char(255) not null,
	Description char(255) null,
	DateOperation char(255) not null,
	Status char(255) not null default 'True',
	PRIMARY KEY(operation_id),
	FOREIGN KEY(Login) REFERENCES USR(Login)
);

insert into Balance(Type_Operation, Sum, BalanceAfterOperation, Login, Description, DateOperation, Status)
values ('Init',0,0,'v_sh95', 'Initial your balance', 'I white it From MySQL', 'True');

#Status: 1)Available 2)Not Available
CREATE TABLE TariffOnAbonementForVisit
(
	Name_tariff_on_abonement char(255) not null,
	Num_days int(11) null default 0,
	Max_Num_visits_in_this_tariff int(11) null default 0,
	Price decimal not null default 0,
	Status char(25) not null default 'available',
	PRIMARY KEY(Name_tariff_on_abonement)
);

INSERT INTO TariffOnAbonementForVisit (Name_tariff_on_abonement,Num_days,Max_Num_visits_in_this_tariff,Price,Status)
values ('Seven',7,null,700,'available'),
('20700',null,20,700,'available');


#Status: Expired, Revoke, Active
CREATE TABLE UsingTariffOnAbonementForVisit
(
	id_abonement int(11) unsigned not null auto_increment,
	Name_tariff_on_abonement char(255) not null,
	DateConnection char(255) not null,
	Status char(20) not null default 'Active',
	NumOfVisitsMadeWithUsingThisTariff int(11) not null default 0,
	Login char(255) not null default '',
	DateOutFromActivity char(255) null,
	FOREIGN KEY(Name_tariff_on_abonement) REFERENCES TariffOnAbonementForVisit(Name_tariff_on_abonement),
	FOREIGN KEY(Login) REFERENCES USR(Login),
	PRIMARY KEY(id_abonement)
);

#Add type auto and then will check his. For trucks create new zone and new tarif.
CREATE TABLE TS
(
	id_ts int(11) unsigned not null auto_increment,
	Number char(255) not null,
	Company char(255) not null,
	Mode char(255) not null,
	Login char(255) not null,
	Status char(255) not null default 'True',
	FOREIGN KEY(Login) REFERENCES USR(Login),
	PRIMARY KEY(id_ts)
);


CREATE TABLE Type_Parking
(
	id_type int(11) unsigned not null auto_increment,
	Name char(30) not null,
	PRIMARY KEY(id_type)
);

INSERT INTO Type_Parking (Name)
values ('Ground'),
('Underground'),
('Ground-Underground');

CREATE TABLE ParkingZone
(
	Parking_zone int(11) not null default 1,
	id_type int(11) unsigned not null default 1,
	#Levels int(11) not null default 1,
	Address char(50) not null default '',
	FOREIGN KEY(id_type) REFERENCES Type_Parking(id_type),
	PRIMARY KEY(Parking_zone)
);

INSERT INTO ParkingZone (Parking_zone, id_type,Address)
values (1, 1,'Vladimir/Bolokonskaya'),
(2, 2, 'Vladimir/Bolokonskaya'),
(3, 1,'Vladimir/Bolokonskaya');


#Type Level may be: 1)Underground part 2)Elevated part
CREATE TABLE LevelZone
(
	id_location_level int(11) unsigned not null auto_increment,
	Parking_zone int(11) not null default 1,
	Level int(11) not null default 1,
	TypeLevel char(255) not null,
	#Places int(11) not null default 1,
	FOREIGN KEY(Parking_zone) REFERENCES ParkingZone(Parking_zone),
	PRIMARY KEY(id_location_level)
);

INSERT INTO LevelZone (Parking_zone,Level,TypeLevel)
values (1, 1,'Underground'),
(1, 1,'Elevated'),
(1, 2,'Elevated'),
(2, 1,'Elevated'),
(3, 1,'Elevated');


#Type may be Closed or Opened
CREATE TABLE TariffOnPlace
(
	id_tariff_on_place int(11) unsigned not null auto_increment,
	#FirstFreeTimeInMinutes int(11) not null default 0,
	#then will be bool:
	SupportClimateControl char(3) not null default '',
	Type char(6) not null default '',
	Status char(255) not null default 'Active',
	PriceForHourWithoutAbonement decimal not null default 0,
	PriceForHourWithAbonement decimal not null default 0,
	PRIMARY KEY(id_tariff_on_place)
);

INSERT INTO TariffOnPlace (SupportClimateControl,Type,PriceForHourWithoutAbonement,PriceForHourWithAbonement)
values ('NO','Closed',12,0),
('NO','Opened',10,0),
('YES','Closed',15,0);

#Location = position
#Status: Free , Occupied , Not working , Was replaced
CREATE TABLE Place
(
	id_location_place int(11) unsigned not null auto_increment,
	id_location_level int(11) unsigned not null default 1,
	NumberPlace int(11) not null default 1,
	Status char(255) not null default 'Free',
	id_tariff_on_place int(11) unsigned not null,
	id_alternative_tariff_on_place int(11) null,
	FOREIGN KEY(id_location_level) REFERENCES LevelZone(id_location_level),
	FOREIGN KEY(id_tariff_on_place) REFERENCES TariffOnPlace(id_tariff_on_place),
	PRIMARY KEY(id_location_place)
);

CREATE TABLE Reservation_Tariff
(
	id_Reservation_Tariff int(11) unsigned not null auto_increment,
	FirstFreeTimeInMinutes int(11) not null default 0,
	PriceInRubForHourHightFreeTime decimal not null,
	Status char(255) not null default 'available',
	ValidityPeriodFromTheTimeOfActivationInHour int(11) not null default 12,
	Primary Key(id_Reservation_Tariff)
);

INSERT INTO Reservation_Tariff (FirstFreeTimeInMinutes,PriceInRubForHourHightFreeTime,Status,ValidityPeriodFromTheTimeOfActivationInHour)
values (15,5,'available',2);

#Status may be: 1)Reservation was expired 2)was used 3)in waiting visit 4)was revoke 5) formed
#Status may be: 1)Active 2)Closed 3)Formed
CREATE TABLE Reservation
(
	id_reservation_user int(11) unsigned not null auto_increment,
	id_Reservation_Tariff int(11) unsigned not null,
	Login char(255) not null default '',
	DateConnection char(255) null,
	id_location_place int(11) unsigned null,
	id_alternative_location_place int(11) null,
	Status char(255) not null default 'Formed',
	DateOutFromActivity char(255) null,
	ApproximatelyDateOutFromActivity char(255) null,
	Description char(255) null,
	FOREIGN KEY(id_Reservation_Tariff) REFERENCES Reservation_Tariff(id_Reservation_Tariff),
	FOREIGN KEY(Login) REFERENCES USR(Login),
	FOREIGN KEY(id_location_place) REFERENCES Place(id_location_place),
	Primary Key(id_reservation_user)
);

CREATE TABLE VisitParameters
(
	id_vis_param int(11) unsigned not null auto_increment,
	FirstFreeTimeInMinutes int(11) not null default 0,
	FirstFreeTimeOnChangeBalans int(11) not null default 0,
	Status char(255) not null default 'Active',
	PRIMARY KEY(id_vis_param)
);


insert into VisitParameters(FirstFreeTimeInMinutes,FirstFreeTimeOnChangeBalans)
values (15,20);

CREATE TABLE Visit
(
	Num_vis int(11) unsigned not null auto_increment,
	id_ts int(11) unsigned not null,	
	id_location_place int(11) unsigned not null,
	DateIn char(255) not null default '00-00-00 00:00:00',
	DateOut char(255) null default 'dateout',
	FirstAttemptGoOut char(255) null default 'dateout2',
	NextAttemptGoOut char(255) null default 'dateout3',
	id_vis_param int(11) unsigned not null,

	Status char(255) not null default 'Public',
	PRIMARY KEY(Num_vis),
	FOREIGN KEY(id_ts) REFERENCES TS(id_ts),
	FOREIGN KEY(id_location_place) REFERENCES Place(id_location_place),
	FOREIGN KEY(id_vis_param) REFERENCES VisitParameters(id_vis_param)
);

insert into Place(id_location_level, NumberPlace, id_tariff_on_place)
values (1,1,1),
(1,2,1),
(1,3,1);